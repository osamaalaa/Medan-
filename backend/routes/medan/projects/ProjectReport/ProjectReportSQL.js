
let statements = {
    getAllProjectReport: {
            statement :`
            SELECT PROJECT_ID,
                   INTRODUCTION,
                   OPERATION_FMW,
                   SCOPE,
                   APPLICATIONS,
                   DURATION,
                   INFO_GATHERING,
                   OBJECTIVES_DEF,
                   KEY_DELIVERABLES,
                   RESPONSIBILITY,
                   COMMITTEES,
                   TASK_DISTRIBUTION,
                   PROBLEMS,
                   EVALUATION,
                   SUCCESS_FACTOR,
                   MEETING_MOM,
                   ISSUE_LOG,
                   WORKORDER,
                   INCIDENT_REP,
                   CMS,
                   ARCHIVING,
                   ASSIGNMENT,
                   RISK_DETECTION,
                   CREATED_BY,
                   CREATION_DATE
              FROM PROJECT_REPORT `,
            returns: [],
            bindings: [],
            qstring: "",
            requireCommit: false
    },
  
    getOneProjectReportByID:{
        statement:`
        SELECT PROJECT_ID,
               INTRODUCTION,
               OPERATION_FMW,
               SCOPE,
               APPLICATIONS,
               DURATION,
               INFO_GATHERING,
               OBJECTIVES_DEF,
               KEY_DELIVERABLES,
               RESPONSIBILITY,
               COMMITTEES,
               TASK_DISTRIBUTION,
               PROBLEMS,
               EVALUATION,
               SUCCESS_FACTOR,
               MEETING_MOM,
               ISSUE_LOG,
               WORKORDER,
               INCIDENT_REP,
               CMS,
               ARCHIVING,
               ASSIGNMENT,
               RISK_DETECTION,
               CREATED_BY,
               CREATION_DATE
          FROM PROJECT_REPORT
   WHERE PROJECT_ID = :PROJECT_ID `,
        returns: [],
        bindings: [],
        qstring: "",
        requireCommit: false
    },
  
  
  insertProjectReport: {
     statement: `
     INSERT INTO PROJECT_REPORT (PROJECT_ID,
          INTRODUCTION,
          OPERATION_FMW,
          SCOPE,
          APPLICATIONS,
          DURATION,
          INFO_GATHERING,
          OBJECTIVES_DEF,
          KEY_DELIVERABLES,
          RESPONSIBILITY,
          COMMITTEES,
          TASK_DISTRIBUTION,
          PROBLEMS,
          EVALUATION,
          SUCCESS_FACTOR,
          MEETING_MOM,
          ISSUE_LOG,
          WORKORDER,
          INCIDENT_REP,
          CMS,
          ARCHIVING,
          ASSIGNMENT,
          RISK_DETECTION,
          CREATED_BY,
          CREATION_DATE)
  VALUES (:PROJECT_ID,
     :INTRODUCTION,
     :OPERATION_FMW,
     :SCOPE,
     :APPLICATIONS,
     :DURATION,
     :INFO_GATHERING,
     :OBJECTIVES_DEF,
     :KEY_DELIVERABLES,
     :RESPONSIBILITY,
     :COMMITTEES,
     :TASK_DISTRIBUTION,
     :PROBLEMS,
     :EVALUATION,
     :SUCCESS_FACTOR,
     :MEETING_MOM,
     :ISSUE_LOG,
     :WORKORDER,
     :INCIDENT_REP,
     :CMS,
     :ARCHIVING,
     :ASSIGNMENT,
     :RISK_DETECTION,
     :CREATED_BY,
     sysdate)
     RETURN APPLICATIONS, PROJECT_ID INTO :R_APPLICATIONS, :R_PROJECT_ID`,
     returns: ["R_APPLICATIONS","R_PROJECT_ID"],
     bindings: [],
     qstring: "",
     requireCommit: true
 }
}
  module.exports = statements ;
  